from django.shortcuts import render, redirect
# from django.contrib.auth.models import User
from django.http import HttpResponse, HttpResponseRedirect
from django.template import loader
from django.shortcuts import render
# from django.db.models import UserEmail
from dataeden_site.settings import STATIC_URL, BASE_DIR
# from .models import EmailWaitlist
from .forms import EmailForm
from .models import EmailAddress
import os



# path = os.path.join(os.path.dirname(__file__), 'html/')

def index(request):
    template = loader.get_template('templates/index.html')
    form = EmailForm()
    rendered_form = form.render("templates/emailForm.html")
    context = {
        'title': 'Data Eden',
        'content': 'Welcome to Data Eden',
        'css_url': STATIC_URL + 'pages/style.css',
        "form": rendered_form,
        # 'base_dir': BASE_DIR,
    }
    return HttpResponse(template.render(context, request))

def success(request):
    template = loader.get_template('templates/success.html')
    context = {
        'title': 'Data Eden',
        'content': 'Success!',
        'css_url': STATIC_URL + 'pages/style.css',
        # 'base_dir': BASE_DIR,
    }
    return HttpResponse(template.render(context, request))

def register_email(request):
    import logging
    logger = logging.getLogger("mylogger")
    logging.basicConfig(filename='mylog.log', level=logging.DEBUG)
    logger.debug(request)
    if request.method == 'POST':
        logging.debug('request.method=POST')
        form = EmailForm(request.POST)
        logging.debug('form=%s', form)
        if form.is_valid():
            form.clean_email.save()
            logging.debug('called form.save(), result=%s', form)
            # return redirect('success')
            return render(request, 'templates/success.html', {'email': form.cleaned_data['email']})
        else:
            logging.debug('form is not valid')
    else:
        logging.debug('request.method is not POST')


    return render(request, 'success.html', {'email': form.cleaned_data['email']})



        # email = form.cleaned_data['email']
        # email_address = EmailAddress(email=email)
        # email_address.save()
        # return redirect('templates/success.html')
        # return HttpResponseRedirect('templates/success.html')
        # if form.is_valid():
        #     email = form.cleaned_data['email']
        #     email_address = EmailAddress(email=email)
        #     email_address.save()
        #     # return redirect('templates/success.html')
        #     return HttpResponseRedirect('templates/success.html')
        # else:
        #     return render(request, 'templates/index.html')


    # userEmail = get_object_or_404(userEmail, pk=pk)

    # if request.method == "POST":
    #     form = formEmail()
    #     if form.is_valid():
    #         email = form.cleaned_data.get("email")
    #         userEmail.email = email
    #         userEmail.save()

    #         return redirect("success")



    # if request.method == "POST":
    #     form = formEmail(request.POST)
    #     if form.is_valid():
    #         email = form.cleaned_data["email"]

    #         # Create a new UserEmail object
    #         user_email = UserEmail(email=email)

    #         # Save the UserEmail object to the database
    #         user_email.save()

    #         # Redirect the user to a success page
    #         return redirect("email_registered")

    # else:
    #     form = formEmail()

    # return render(request, "templates/success.html")

        